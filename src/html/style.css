

@page {
    size: A4 portrait;
    margin: 0;
}

body {
    padding: 0;
    margin: 0;
}

.page {
    page-break-after: always;
    width: {{ WIDTH }}px;
    height: {{ HEIGHT }}px;
    position: relative;
}

.page > .inner {

    position: absolute;

    top: {{ page_margins }}px;
    left: {{ page_margins }}px;

    width: {{ WIDTH - page_margins*2 }}px;
    height: {{ HEIGHT - page_margins*2 }}px;
}


{% if debug %}

    .page {
        border: dotted 0.5px rgb(192, 224, 118);
    }

    .page > .inner {
        border: dotted 0.5px rgb(214, 132, 132);
    }

{% endif %}
    

/*
 * Fonts
 */
body {
    font-family: 'Noto Sans', sans-serif;
    font-size: 9pt;
    color:rgb(50, 50, 50);
}





.header {
    position: relative;
    width: 100%;
    height: 160px;
}


.header > img.me {

    position: absolute;
    top: 0;
    left: 0;

    width: 160px;
    height: 160px;

    /*border-radius: 5%;*/
    filter: grayscale(70%); 
    /*transform: scaleX(-1);*/

}

.header > .text {

    position: absolute;
    top: 0;
    left: 170px;

    width: 200px;
    height: 160px;
}


.header > .text > h1 {
    margin: 0;
    color: {{primary_color}};
    font-size: 30pt;
    font-family: 'Share Tech Mono', monospace;
}

.header > .text  {
    position: relative;
    height: 100%;
}

.header > .text > .titles  {
    position: absolute;
    bottom: 0;
}

.header > .text > .titles > p {
    margin-top: 0;
    color: {{grey_color}};
    text-transform: uppercase;
    font-weight: bold;
    font-size: 11pt;
    margin-bottom: 0;
    margin-top: 8px;
}

.header > .links  {
    position: absolute;
    right: 0;
    top: 10px;
}

.header > .links > .link  {
    margin-bottom: 10px;
}

.header > .links > .link  {
    margin-bottom: 10px;
}

.header > .links > .link svg  {
    margin-left: 20px;
    margin-right: 10px;
    vertical-align: -5px;
}




hr {

    border: 2px dotted {{grey_color}};
    border-style: none none dotted; 

    margin-top: 15px;
    margin-bottom: 15px;

}


.svg-primary svg path   {
    fill: {{primary_color}} !important;
}



a {
    text-decoration: none;
    color: {{primary_color}};
    font-family: 'Share Tech Mono', monospace;
}



h2 {
    font-size: 14pt;
    font-family: 'Share Tech Mono', monospace;
    color: {{primary_color}};
    margin-top: 0;
}




.row > .column {

    width: {{ column_width }}px;
    margin-left: {{ column_sep }}px;
    display: inline-block;
    vertical-align:top;
    position: relative;
}

 .row > .column.x2 {
    width: {{ column_width*2+column_sep }}px;
}

 .row > .column.x3 {
    width: {{ column_width*3+column_sep*2 }}px;
}

.row > .column:first-child {
    margin-left: 0;
}


.row > .divisor {
    display: inline-block;
    vertical-align:top;
    position: relative;

    /*width: {{ column_sep }}px;*/

    margin-left:  {{ column_sep/2-1 }}px;
    margin-right:  {{ column_sep/2-1 }}px;

    min-height: 10px;

    border-left: 2px dotted {{grey_color}};
}


.divisor + .column {
    margin-left: 0;
}




.timeline > .row {
    width: {{ INNER_WIDTH - timeline_margin*2  }}px;
    heigth: 100px;
    margin-left: {{timeline_margin}}px;
    margin-right: {{timeline_margin}}px;
}

.timeline > .row > .block {
    width: {{ timeline_block_width  }}px;
    display: inline-block;
    text-align: center;
}

.timeline > .row > .block > p {
    margin-top: 0;
    margin-bottom: 0;
}

.timeline > .row > .block > p {
    margin-top: 0;
    margin-bottom: 0;
}

.timeline > .row > .block > p.title {
    font-weight: bold;
    color: {{primary_color}};
}
.timeline > .row > .block > p.desc {
    color: {{grey_color}};

    margin-top: 5px;
    margin-bottom: 10px;

}
.timeline > .row > .block > p.year {
    font-family: 'Share Tech Mono', monospace;
    color: {{grey_color}};
    margin-top: 10px;
}









.timeline > .line {
    height: 10px;
}

.timeline > .line > * {
    display: inline-block;
}


.timeline > .line > .arrow {
    width: {{ timeline_arrow_width  }}px;
    text-align: center;
}

.timeline > .line > .arrow svg path {
    fill: {{timeline_gradient[0]}} !important;
}



.timeline > .line > .arrow:last-of-type svg path {
    fill: {{timeline_gradient.slice(-1)[0] }} !important;
}





.timeline > .line > .box {
    width: {{ timeline_block_width  }}px;
    height: 10px;
    border-radius: 5px;
    background-color: blue;
}


{% for i in range(0, timeline.length+1) -%}
    .timeline > .line > .box:nth-child({{i+2}}) {
        background-image: linear-gradient(to right, {{ timeline_gradient[i] }} , {{timeline_gradient[i+1]}});
    }
{%- endfor %}




.timeline > .line > .box.side {
    width: {{ timeline_block_width/2 - timeline_arrow_width + timeline_margin  }}px;
}